{"version":3,"sources":["logo.svg","components/Header.jsx","context/AppReducer.js","context/GlobalState.js","components/Balance.jsx","components/IncomeExpenses.jsx","components/Transaction.jsx","components/TransactionList.js","components/AddTransaction.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","state","action","type","transactions","filter","transaction","id","payload","getLocalStorage","localStorage","getItem","JSON","parse","amount","console","log","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addTransaction","addToLocalStorage","setItem","stringify","useGlobalContext","useContext","Balance","total","map","reduce","toFixed","IncomeExpenses","amounts","income","expenses","totalIcome","totalExpenses","className","Transaction","text","sign","Math","abs","onClick","TransactionList","item","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","floor","random","parseInt","htmlFor","onChange","target","placeholder","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7a1878af.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\n\nconst Header = () => {\n  return (\n    <div>\n      <h2>Expense Tracker App</h2>\n    </div>\n  );\n};\n\nexport default Header;\n","export default (state, action) => {\n  switch (action.type) {\n    case 'DELETE_TRANSACTION':\n      return {\n        ...state,\n        transactions: state.transactions.filter(\n          (transaction) => transaction.id !== action.payload\n        ),\n      };\n    case 'ADD_TRANSACTION':\n      return {\n        ...state,\n        transactions: [action.payload, ...state.transactions],\n      };\n    default:\n      return state;\n  }\n};\n","import React, { createContext, useContext, useReducer } from 'react';\nimport AppReducer from './AppReducer';\n\nfunction getLocalStorage() {\n  return localStorage.getItem('transaction')\n    ? JSON.parse(localStorage.getItem('transaction'))\n    : [];\n}\nconst amount = [getLocalStorage()];\nconsole.log(amount);\n// Initial state\nconst initialState = {\n  transactions: [getLocalStorage()],\n};\nconsole.log(initialState.transactions);\n// Create context\nexport const GlobalContext = createContext(initialState);\n\n// Provider component\nexport const GlobalProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n\n  // Actions\n  function deleteTransaction(id) {\n    dispatch({\n      type: 'DELETE_TRANSACTION',\n      payload: id,\n    });\n  }\n\n  function addTransaction(transaction) {\n    dispatch({\n      type: 'ADD_TRANSACTION',\n      payload: transaction,\n    });\n  }\n  function addToLocalStorage(transaction) {\n    localStorage.setItem('transaction', JSON.stringify(transaction));\n  }\n\n  return (\n    <GlobalContext.Provider\n      value={{\n        transactions: state.transactions,\n        deleteTransaction,\n        addTransaction,\n        addToLocalStorage,\n      }}\n    >\n      {children}\n    </GlobalContext.Provider>\n  );\n};\n\nfunction useGlobalContext() {\n  return useContext(GlobalContext);\n}\nexport default useGlobalContext;\n","import React from 'react';\nimport useGlobalContext from '../context/GlobalState';\nconst Balance = () => {\n  const { transactions } = useGlobalContext();\n  // get all the amount\n\n  const amount = transactions.map((transaction) => transaction.amount);\n\n  // calculate the total\n  const total = amount\n    .reduce((total, amount) => {\n      return (total += amount);\n    }, 0)\n    .toFixed(2);\n  return (\n    <>\n      <h4>Your Balance</h4>\n      <h1>${total}</h1>\n    </>\n  );\n};\n\nexport default Balance;\n","import React from 'react';\nimport useGlobalContext from '../context/GlobalState';\nconst IncomeExpenses = () => {\n  const { transactions } = useGlobalContext();\n  const amounts = transactions.map((transaction) => transaction.amount);\n\n  const income = amounts.filter((amount) => amount > 0);\n  const expenses = amounts.filter((amount) => amount < 0);\n\n  const totalIcome = income\n    .reduce((total, amount) => {\n      return (total += amount);\n    }, 0)\n    .toFixed(2);\n\n  const totalExpenses = expenses\n    .reduce((total, amount) => {\n      return (total += amount);\n    }, 0)\n    .toFixed(2);\n  return (\n    <div className=\"inc-exp-container\">\n      <div>\n        <h4>Income</h4>\n        <p className=\"money plus\">${totalIcome}</p>\n      </div>\n      <div>\n        <h4>Expense</h4>\n        <p className=\"money minus\">${totalExpenses}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default IncomeExpenses;\n","import React from 'react';\nimport useGlobalContext from '../context/GlobalState';\n\nconst Transaction = ({ id, text, amount }) => {\n  const { deleteTransaction } = useGlobalContext();\n  const sign = amount > 0 ? '+' : '-';\n  return (\n    <div>\n      <li className={amount > 0 ? 'plus' : 'minus'}>\n        {text}{' '}\n        <span>\n          ${sign}\n          {Math.abs(amount)}\n        </span>\n        <button onClick={() => deleteTransaction(id)} className=\"delete-btn\">\n          x\n        </button>\n      </li>\n    </div>\n  );\n};\n\nexport default Transaction;\n","import React from 'react';\nimport useGlobalContext from '../context/GlobalState';\nimport Transaction from './Transaction';\nconst TransactionList = () => {\n  const { transactions } = useGlobalContext();\n\n  return (\n    <div>\n      <h3>History</h3>\n      <ul className=\"list\">\n        {/* <li className=\"minus\">\n          Cash <span>$400</span>\n          <button className=\"delete-btn\">x</button>\n        </li> */}\n        {transactions.map((item) => {\n          return <Transaction key={item.id} {...item} />;\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default TransactionList;\n","import React, { useState } from 'react';\nimport useGlobalContext from '../context/GlobalState';\n\nconst AddTransaction = () => {\n  const { addTransaction, addToLocalStorage } = useGlobalContext();\n  const [text, setText] = useState('');\n  const [amount, setAmount] = useState(0);\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const newTransaction = {\n      id: Math.floor(Math.random() * 1000),\n      text,\n      amount: parseInt(amount),\n    };\n    // addTransaction(newTransaction);\n    addToLocalStorage(addTransaction(newTransaction));\n  };\n\n  return (\n    <>\n      <h3>Add New Transaction</h3>\n      <form onSubmit={onSubmit}>\n        <div className=\"form-control\">\n          <label htmlFor=\"text\">Text</label>\n          <input\n            type=\"text\"\n            value={text}\n            onChange={(e) => setText(e.target.value)}\n            placeholder=\"Enter the text...\"\n          />\n        </div>\n        <div className=\"form-control\">\n          <label htmlFor=\"amount\">\n            Amount <br />\n            (negative - expense, positive -income)\n          </label>\n          <input\n            type=\"number\"\n            value={amount}\n            onChange={(e) => setAmount(e.target.value)}\n            placeholder=\"enter amount ....\"\n          />\n        </div>\n        <button className=\"btn\">Add Transaction</button>\n      </form>\n    </>\n  );\n};\n\nexport default AddTransaction;\n","import logo from './logo.svg';\nimport './App.css';\nimport Header from './components/Header';\nimport Balance from './components/Balance';\nimport IncomeExpenses from './components/IncomeExpenses';\nimport TransactionList from './components/TransactionList';\nimport AddTransaction from './components/AddTransaction';\nfunction App() {\n  return (\n    <>\n      <Header />\n      <div className=\"container\">\n        <Balance />\n        <IncomeExpenses />\n        <TransactionList />\n        <AddTransaction />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { GlobalProvider } from './context/GlobalState';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalProvider>\n      <App />\n    </GlobalProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}